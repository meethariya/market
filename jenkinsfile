pipeline {
    agent any

    environment {
        FRONTEND_DIR = 'market-client'
        BACKEND_DIR = 'market'
        AWS_DB_URL = credentials('marketDbUrl')
        AWS_DB_CRED = credentials('marketDbCredentials')
        PEM_FILE = credentials('RSAkey')
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Install Angular Dependencies') {
            steps {
                dir(FRONTEND_DIR) {
                    sh 'npm install --legacy-peer-deps'
                }
            }
        }

        stage('Build Angular') {
            steps {
                dir(FRONTEND_DIR) {
                    sh 'ng build --base-href=/app/'
                }
            }
        }

        stage('Clean build SpringBoot') {
            steps {
                dir(BACKEND_DIR) {
                    sh 'mvn -Pprod clean package "-DdbUrl=$AWS_DB_URL" "-DdbUsername=$AWS_DB_CRED_USR" "-DdbPassword=$AWS_DB_CRED_PSW" "-DmailPassword=$MAIL_PASSWORD"'
                }
            }
        }

        stage('Deploy SpringBoot') {
            steps {
                script {
                    deploy adapters: [
                        tomcat9(credentialsId: 'Tomcat10', path: '', url: 'http://localhost:8080')
                    ],
                    contextPath: '/market',
                    onFailure: false,
                    war: 'market/**/*.war'
                }
            }
        }

        stage('Deploy Angular') {
            steps {
            	sh'''
            		scp -rp -o StrictHostKeyChecking=no -i "$PEM_FILE" market-client/dist/market-client/* ubuntu@ec2-13-233-120-185.ap-south-1.compute.amazonaws.com:/home/ubuntu/port/
				echo " ***** Transfered built files to server's port ***** "
            	'''
            	sshagent(credentials: ['sshEC2']) {
		        sh '''
		            #!/bin/bash
		            if [ -d /opt/tomcat/webapps/app ]; then
		            	echo " ***** App Folder found in tomcat ***** "
		                	sudo cp /home/ubuntu/port/* /opt/tomcat/webapps/app
		            else
		                echo " ***** App Folder not found in tomcat ***** "

		                sudo mkdir /opt/tomcat/webapps/app
		                sudo chmod -R 777 /opt/tomcat/webapps/app
		                echo " ***** Created folder in Tomcat app ***** "

		                sudo cp -r /home/ubuntu/port/* /opt/tomcat/webapps/app
		                echo " ***** Copied all freshly build files to Tomcat app ***** "
		            fi
		            echo " ***** Clearing the port ***** "
		            sudo rm -rf /home/ubuntu/port/*
		            sudo mkdir /home/ubuntu/port
		            sudo chmod -R 777 /home/ubuntu/port
		        '''
                }
            }
        }
        
        stage('Clean Workspace again') {
            steps {
                cleanWs()
            }
        }
    }
}
